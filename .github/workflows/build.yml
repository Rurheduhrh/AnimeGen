name: Build IPA and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Xcode
      run: sudo xcode-select --switch /Applications/Xcode_13.2.1.app/Contents/Developer

    - name: Make ipabuild.sh executable
      run: chmod +x ipabuild.sh

    - name: Run ipabuild.sh
      run: ./ipabuild.sh

    - name: Archive IPA
      uses: actions/upload-artifact@v2
      with:
        name: ipa-artifact
        path: build/AnimeGen.ipa

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download IPA Artifact
      uses: actions/download-artifact@v2
      with:
        name: ipa-artifact

    - name: Create Release
      uses: actions/github-script@v5
      with:
        script: |
          const fs = require('fs');
          const content = fs.readFileSync('AnimeGen.ipa');
          const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
          
          const release = await octokit.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: process.env.GITHUB_REF,
            name: `Release ${process.env.GITHUB_REF}`,
            body: `Release notes for ${process.env.GITHUB_REF}`,
            draft: false,
            prerelease: false
          });

          await octokit.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: release.data.id,
            name: 'AnimeGen.ipa',
            data: content
          });
